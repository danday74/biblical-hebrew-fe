@import 'app/globals';
@import '~bootswatch/dist/spacelab/variables';
@import '~bootstrap/scss/bootstrap';
@import '~bootswatch/dist/spacelab/bootswatch';
@import 'styles/cross-browser';

html {
  overflow-y: scroll;
  overflow-x: hidden;
  height: 100%;
}

html.supported .useless, html.partial.proceed .useless {
  display: none;
}

html.mobile .supported-list {
  display: none;
}

body {
  min-width: $bodyMinWidth;
  color: $lightestGreyOnWhite;
  text-rendering: optimizeLegibility;
  min-height: 100%;
}

button.btn {
  min-width: 80px;
}

input.gentle-shade {
  background-color: lighten(#E8F0FE, 3%) !important;
}

input[type=checkbox] {
  transform: scale(1.5);
}

.success-tick, .failure-cross {
  font-size: 1.5em;
}

.success, .success-tick {
  color: $successGreen;
}

.failure, .failure-cross {
  color: $failureRed;
}

.small-print {
  font-size: 0.8em;
  margin: 5px -150px 0;
}

a, .fake-link {
  &.small {
    font-size: 0.9em;
  }

  color: $bhBlue;

  &:hover {
    color: $bhBlue;
  }
}

.fake-link {
  cursor: pointer;

  &:hover {
    text-decoration: underline;
  }
}

.rtl {
  direction: rtl;
}

.table-striped > tbody > tr:nth-child(odd) > td,
.table-striped > tbody > tr:nth-child(odd) > th {
  color: #6E6E6E;
}

.table-striped > tbody > tr:nth-child(even) > td,
.table-striped > tbody > tr:nth-child(even) > th {
  color: $lightestGreyOnWhite;
}

//noinspection CssOverwrittenProperties
.ng-draggable {
  &.ng-dragging {
    cursor: move;
    cursor: grabbing;
    background-color: #333 !important;
  }

  cursor: move;
  cursor: grab;
}

html.keyboard input.just-under-keyboard-control:not(:focus) {
  // bootswatch spacelab
  border-color: #90aece;
  box-shadow: 0 0 0 0.2rem rgba(68, 110, 155, 0.25);
}

$underKeyboardControlColor: #444;
html.keyboard input.under-keyboard-control:not(:focus) {
  border-color: rgba($underKeyboardControlColor, 0.5);
  box-shadow: 0 0 0 0.2rem rgba($underKeyboardControlColor, 0.25);
}
